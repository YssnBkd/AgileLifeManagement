<problems>
<problem>
  <file>file://$PROJECT_DIR$/app/src/main/java/com/example/agilelifemanagement/archive/domain_usecase_backup/task/CreateTaskUseCase.kt</file>
  <line>53</line>
  <module>AgileLifeManagement.app.main</module>
  <package>com.example.agilelifemanagement.domain.usecase.task</package>
  <entry_point TYPE="method" FQNAME="com.example.agilelifemanagement.domain.usecase.task.CreateTaskUseCase java.lang.Object invoke(java.lang.String title, java.util.List&lt;java.lang.String&gt; description, java.time.LocalDate dueDate, com.example.agilelifemanagement.domain.model.Task.Priority priority, com.example.agilelifemanagement.domain.model.Task.Status status, java.lang.String sprintId, java.lang.String goalId, int estimatedEffort, java.util.List&lt;java.lang.String&gt; tags, kotlin.coroutines.Continuation&lt;? super com.example.agilelifemanagement.domain.model.Result&lt;? extends java.lang.String&gt;&gt; $completion)" />
  <problem_class id="FoldInitializerAndIfToElvis" severity="WEAK WARNING" attribute_key="INFO_ATTRIBUTES">If-Null return/break/... foldable to '?:'</problem_class>
  <description>If-Null return/break/... foldable to '?:'</description>
  <highlighted_element>if (sprint == null)</highlighted_element>
  <language>kotlin</language>
  <offset>12</offset>
  <length>19</length>
</problem>
<problem>
  <file>file://$PROJECT_DIR$/app/src/main/java/com/example/agilelifemanagement/archive/domain_usecase_backup/task/CreateTaskUseCase.kt</file>
  <line>66</line>
  <module>AgileLifeManagement.app.main</module>
  <package>com.example.agilelifemanagement.domain.usecase.task</package>
  <entry_point TYPE="method" FQNAME="com.example.agilelifemanagement.domain.usecase.task.CreateTaskUseCase java.lang.Object invoke(java.lang.String title, java.util.List&lt;java.lang.String&gt; description, java.time.LocalDate dueDate, com.example.agilelifemanagement.domain.model.Task.Priority priority, com.example.agilelifemanagement.domain.model.Task.Status status, java.lang.String sprintId, java.lang.String goalId, int estimatedEffort, java.util.List&lt;java.lang.String&gt; tags, kotlin.coroutines.Continuation&lt;? super com.example.agilelifemanagement.domain.model.Result&lt;? extends java.lang.String&gt;&gt; $completion)" />
  <problem_class id="FoldInitializerAndIfToElvis" severity="WEAK WARNING" attribute_key="INFO_ATTRIBUTES">If-Null return/break/... foldable to '?:'</problem_class>
  <description>If-Null return/break/... foldable to '?:'</description>
  <highlighted_element>if (goal == null)</highlighted_element>
  <language>kotlin</language>
  <offset>12</offset>
  <length>17</length>
</problem>
<problem>
  <file>file://$PROJECT_DIR$/app/src/main/java/com/example/agilelifemanagement/archive/domain_usecase_backup/task/UpdateTaskUseCase.kt</file>
  <line>59</line>
  <module>AgileLifeManagement.app.main</module>
  <package>com.example.agilelifemanagement.domain.usecase.task</package>
  <entry_point TYPE="method" FQNAME="com.example.agilelifemanagement.domain.usecase.task.UpdateTaskUseCase java.lang.Object invoke(java.lang.String id, java.lang.String title, java.util.List&lt;java.lang.String&gt; description, java.time.LocalDate dueDate, com.example.agilelifemanagement.domain.model.Task.Priority priority, com.example.agilelifemanagement.domain.model.Task.Status status, java.lang.String sprintId, java.lang.String goalId, int estimatedEffort, java.util.List&lt;java.lang.String&gt; tags, kotlin.coroutines.Continuation&lt;? super com.example.agilelifemanagement.domain.model.Result&lt;? extends kotlin.Unit&gt;&gt; $completion)" />
  <problem_class id="FoldInitializerAndIfToElvis" severity="WEAK WARNING" attribute_key="INFO_ATTRIBUTES">If-Null return/break/... foldable to '?:'</problem_class>
  <description>If-Null return/break/... foldable to '?:'</description>
  <highlighted_element>if (sprint == null)</highlighted_element>
  <language>kotlin</language>
  <offset>12</offset>
  <length>19</length>
</problem>
<problem>
  <file>file://$PROJECT_DIR$/app/src/main/java/com/example/agilelifemanagement/archive/domain_usecase_backup/task/UpdateTaskUseCase.kt</file>
  <line>72</line>
  <module>AgileLifeManagement.app.main</module>
  <package>com.example.agilelifemanagement.domain.usecase.task</package>
  <entry_point TYPE="method" FQNAME="com.example.agilelifemanagement.domain.usecase.task.UpdateTaskUseCase java.lang.Object invoke(java.lang.String id, java.lang.String title, java.util.List&lt;java.lang.String&gt; description, java.time.LocalDate dueDate, com.example.agilelifemanagement.domain.model.Task.Priority priority, com.example.agilelifemanagement.domain.model.Task.Status status, java.lang.String sprintId, java.lang.String goalId, int estimatedEffort, java.util.List&lt;java.lang.String&gt; tags, kotlin.coroutines.Continuation&lt;? super com.example.agilelifemanagement.domain.model.Result&lt;? extends kotlin.Unit&gt;&gt; $completion)" />
  <problem_class id="FoldInitializerAndIfToElvis" severity="WEAK WARNING" attribute_key="INFO_ATTRIBUTES">If-Null return/break/... foldable to '?:'</problem_class>
  <description>If-Null return/break/... foldable to '?:'</description>
  <highlighted_element>if (goal == null)</highlighted_element>
  <language>kotlin</language>
  <offset>12</offset>
  <length>17</length>
</problem>
</problems>